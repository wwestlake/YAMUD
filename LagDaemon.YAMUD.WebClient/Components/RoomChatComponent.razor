@using LagDaemon.YAMUD.Model.Communication
@using LagDaemon.YAMUD.WebClient.Services
@inject IChatService chatService
@inject Authority Authority
@inject ILocalStorageService LocalStorageService

<div class="chat-header">
    Room Chat Channel
</div>

<div class="chat-container">
    <div class="chat-messages">
        @foreach (var msg in InMemoryStorageService.GetRoomChatMessages())
        {
            <span><b>[@msg.DisplayName]</b>&nbsp; @msg.Message</span><br />
        }
    </div>

    <div class="chat-input">
        <input type="text" @bind-value="message" @bind-value:event="oninput" @onkeydown="HandleKeyPress" />
        <button @onclick="SendMessage">Send</button>
    </div>
</div>

@code {
    private string message;

    protected override void OnInitialized()
    {
        chatService.RoomMessageReceived += OnRoomMessageReceived;
    }

    private void OnRoomMessageReceived(RoomChatMessage message)
    {
        //messages.Add(message);
        StateHasChanged(); // Notify Blazor to update the UI
    }

    private async Task HandleKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SendMessage();
        }
    }


    private async Task SendMessage()
    {
        var roomChatMessage = new RoomChatMessage
            {
                To = Guid.NewGuid(), // Replace with the actual recipient ID
                Message = message,
                SentAt = DateTime.UtcNow,
                From = Guid.NewGuid() // Replace with the actual sender ID
            };

        var token = await LocalStorageService.GetObjectAsync<string>("authToken");
        await chatService.SendRoomChatMessageAsync(roomChatMessage);
        message = string.Empty;
    }
}
