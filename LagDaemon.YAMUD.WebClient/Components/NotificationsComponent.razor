@using LagDaemon.YAMUD.Model.Communication
@using LagDaemon.YAMUD.WebClient.Services
@inject ChatService ChatService
@inject Authority Authority

<div class="chat-header">
    Notifications
</div>

<div class="notification-container">
    <div class="notification-messages">
        @foreach (var msg in InMemoryStorageService.GetNotificationMessages())
        {
            <div class="card" style="width: 18rem;">
                <div class="card-body">
                    <h5 class="card-title @GetClassFromUrgency(msg)">@msg.Subject</h5>
                    <h6 class="card-subtitle mb-2 text-primary">@msg.Message</h6>

                    <p class="card-text">@msg.Body</p>
                    @if (msg.Link != null) {
                        <a href="@msg.Link" class="card-link">
                            @if (msg.LinkDescription != null)
                            {
                                @msg.LinkDescription
                            }
                            else
                            {
                                <span>Card link</span>
                            }
                        </a>
                    }
                </div>
            </div>
        }
    </div>
</div>

@code {
    private string message;

    protected override void OnInitialized()
    {
        ChatService.NotificationReceived += OnNotificationMessageReceived;
    }

    private void OnNotificationMessageReceived(NotificationMessage message)
    {
        StateHasChanged(); // Notify Blazor to update the UI
    }

    private string GetClassFromUrgency(NotificationMessage msg)
    {
        switch (msg.Urgency)
        {
            case Urgency.High:
                return "text-danger";
            case Urgency.Medium:
                return "text-warning";
            case Urgency.Low:
                return "text-info";
            default:
                return "text-light";
        }
    }

}
