<!-- LoginForm.razor -->
@page "/register"
@using LagDaemon.YAMUD.WebClient.Services
@using LagDaemon.YAMUD.WebClient.Model
@using System.Text.Json
@using System.Text
@using System.Security.Claims
@using System.IdentityModel.Tokens.Jwt
@using LagDaemon.YAMUD.Model

@inject ILocalStorageService LocalStorageService
@inject IAuthenticationService AuthenticationService
@inject HttpClient HttpClient
@inject NavigationManager Navigation

<div>
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Login</h5>
            </div>
            <div class="modal-body">
                <!-- Login form content -->
                <div class="form-group">
                    <label for="userIdOrEmail">UserID/Email:</label>
                    <input type="text" class="form-control" id="userIdOrEmail" @bind="UserIdOrEmail" />
                </div>
                <div class="form-group">
                    <label for="password">Password:</label>
                    <input type="password" class="form-control" id="password" @bind="Password" />
                </div>
                <div class="form-group">
                    <label for="userIdOrEmail">Display Name:</label>
                    <input type="text" class="form-control" id="displayName" @bind="DisplayName" />
                </div>
                <div class="form-group form-check">
                    <input type="checkbox" class="form-check-input" id="rememberMe" @bind="RememberMe" />
                    <label class="form-check-label" for="rememberMe">Remember Me</label>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="CreateAccount">Create Account</button>
                <button type="button" class="btn btn-primary" @onclick="ReturnToLoginPage">Return to Login Page</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public bool UserIsLoggedIn { get; set; } = false;

    [Parameter]
    public string DisplayName { get; set; } = String.Empty;

    private AuthToken? authToken;
    private string? UserIdOrEmail;
    private string? Password;
    private string? ApiUrl;
    private bool RememberMe;
    private UserAccountRoles userRole;

    protected override async Task OnInitializedAsync()
    {
    }

    private async void ReturnToLoginPage()
    {
        Navigation.NavigateTo("/login");
    }


    private async void CreateAccount()
    {
        await AuthenticationService.RegisterAsync(DisplayName, UserIdOrEmail, Password);
        StateHasChanged();
    }
}
