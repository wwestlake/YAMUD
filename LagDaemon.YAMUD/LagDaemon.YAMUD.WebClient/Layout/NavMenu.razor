
@using LagDaemon.YAMUD.Model
@using LagDaemon.YAMUD.Model.User
@using LagDaemon.YAMUD.WebClient.Pages
@using LagDaemon.YAMUD.WebClient.Services
@using System.IdentityModel.Tokens.Jwt
@using System.Security.Claims
@using Microsoft.AspNetCore.Components.Authorization

@inject ILocalStorageService LocalStorageService
@inject IAuthenticationService AuthenticationService
@inject HttpClient HttpClient

<nav class="navbar navbar-expand navbar-dark bg-dark justify-content-end">
    <div class="container-fluid justify-content-center">
        <a class="navbar-brand" href="#">Yet Another MUD</a>

        <button class="navbar-toggler flex-grow-0" type="button" data-toggle="collapse" data-target="#navbarSupportedContent"
                aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <div class="navbar-nav" id="navbarSupportedContent">
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="nav-link" href="/game">Game</a>
                </li>
                <li class="nav-item">
                        <a class="nav-link" href="/player">Player</a>
                </li>
                <li class="nav-item">
                        <a class="nav-link" href="/room">Room</a>
                </li>
                <li class="nav-item">
                        <a class="nav-link" href="/settings">Settings</a>
                </li>
                <li class="nav-item">
                        <a class="nav-link" href="/help">Help</a>
                </li>
            </ul>
             <div class="navbar-nav">
                <ul class="navbar-nav">
                    <li class="nav-item">
                        <a class="nav-link" href="/useraccount">@DisplayName</a>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</nav>


@code {
    private string DisplayName = string.Empty;
    private UserAccount User = null;


    protected override async Task OnInitializedAsync()
    {
        User = await AuthenticationService.GetUserAsync();
        var role = User.UserRoles.Select(x => x.Role).Min().ToString();

        DisplayName = $"{User.DisplayName} - {role}";
    }
}
